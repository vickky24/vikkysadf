{
	"name": "pl-auditlog",
	"properties": {
		"activities": [
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "logfilesnamee",
					"value": {
						"value": "@concat(formatDateTime(utcNow(),'YYYY-MM-DD'),'_log.csv')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DelimitedText11",
						"type": "DatasetReference",
						"parameters": {
							"logfilename": {
								"value": "@variables('logfilesnamee')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Get Metadata1').output.exists",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "dataflowlogdetails",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "dataflowlogdetails",
									"type": "DataFlowReference",
									"parameters": {
										"adfname": {
											"value": "'@{pipeline().DataFactory}'",
											"type": "Expression"
										},
										"pipelinename": {
											"value": "'@{pipeline().Pipeline}'",
											"type": "Expression"
										},
										"status": {
											"value": "'@{string('success')}'",
											"type": "Expression"
										},
										"Runid": {
											"value": "'@{pipeline().RunId}'",
											"type": "Expression"
										},
										"triggername": {
											"value": "'@{pipeline().TriggerName}'",
											"type": "Expression"
										},
										"logfiles": {
											"value": "'@{variables('logfilesnamee')}'",
											"type": "Expression"
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "dataflowlogdetails_copy1",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "dataflowlogdetails_copy1",
									"type": "DataFlowReference",
									"parameters": {
										"adfname": {
											"value": "'@{pipeline().DataFactory}'",
											"type": "Expression"
										},
										"pipelinename": {
											"value": "'@{pipeline().Pipeline}'",
											"type": "Expression"
										},
										"status": {
											"value": "'@{string('success')}'",
											"type": "Expression"
										},
										"Runid": {
											"value": "'@{pipeline().RunId}'",
											"type": "Expression"
										},
										"triggername": {
											"value": "'@{pipeline().TriggerName}'",
											"type": "Expression"
										},
										"logfiles": {
											"value": "'@{variables('logfilesnamee')}'",
											"type": "Expression"
										}
									},
									"datasetParameters": {
										"source2": {
											"logfilename": {
												"value": "@variables('logfilesnamee')",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								},
								"traceLevel": "Fine"
							}
						}
					]
				}
			}
		],
		"variables": {
			"logfilesnamee": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-07-24T14:29:52Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}